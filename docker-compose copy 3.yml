version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inc_backend
    env_file: .env
    environment:
      # Explicitly set the MySQL host to the database service name
      # This guarantees the correct value is passed
      - MYSQL_HOST=db
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    networks:
      - inc_network
    depends_on:
      db:
        condition: service_healthy
    extra_hosts:
      - "ldap.internal:172.18.121.37"
    restart: always

  nginx:
    image: nginx:alpine
    container_name: inc_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
      - ./build:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - inc_network
    restart: always

  db:
    image: mysql:8.0
    container_name: inc_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ppi
      MYSQL_USER: portal_dev
      MYSQL_PASSWORD: M@sunur1n
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "3306:3306"  # maps host:container
    volumes:
      - db_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - inc_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: inc_phpmyadmin
    restart: always
    environment:
      PMA_HOST: db
      PMA_USER: portal_dev
      PMA_PASSWORD: M@sunur1n
    ports:
      - "8081:80"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - inc_network

volumes:
  db_data:

networks:
  inc_network:
    driver: bridge