version: "3.8"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: inc_backend
    restart: always
    working_dir: /usr/src/app
    volumes:
      # Mount backend source code
      - ./backend:/usr/src/app
      # Ensure node_modules stays inside container (avoid shadowing by host)
      - /usr/src/app/node_modules
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - incnet

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inc_frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - incnet

  db:
    image: mysql:8.0
    container_name: inc_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ppi
      MYSQL_USER: portal_dev
      MYSQL_PASSWORD: M@sunur1n
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - incnet
    # Uncomment this if you want to connect from host machine
    # ports:
    #   - "3307:3306"

networks:
  incnet:
    driver: bridge

volumes:
  db_data:
